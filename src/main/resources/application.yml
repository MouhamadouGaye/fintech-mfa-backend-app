# application.yml
server:
  port: 8080
  servlet:
    context-path: /banking-api
  error: 
    include-message: always
    include-binding-errors: always

spring:
  application:
    name: banking-backend
  
  datasource:
    url: jdbc:postgresql://localhost:5433/bankingsys
    driver-class-name: org.postgresql.Driver
    username: gaye
    password: Postgres.2424


# this is
  redis.host: localhost
  redis.port: 6379
  # redis.password: kobe-the-best-developer
    
  # h2:
  #   console:
  #     enabled: true
  #     path: /h2-console
      
  # jpa:
  #   database-platform: org.hibernate.dialect.H2Dialect
  #   hibernate:
  #     ddl-auto: create-drop
  #   show-sql: true
  #   properties:
  #     hibernate:
  #       format_sql: true
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect


  
  mail:
    host: smtp.gmail.com
    port: 587
    username: mgayeeeeee@gmail.com
    password: fiwrnbmsnwpitzxq
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  # mail:
  #   host: ${MAIL_HOST}
  #   port: ${MAIL_PORT:587}
  #   username: ${MAIL_USERNAME}
  #   password: ${MAIL_PASSWORD}
  #   protocol: smtp
  #   test-connection: false
  #   default-encoding: UTF-8
  #   properties:
  #     mail:
  #       smtp:
  #         auth: true
  #         starttls:
  #           enable: true
  #           required: true
          # ssl:
          #   trust: ${MAIL_HOST}
          # connectiontimeout: 5000
          # timeout: 3000
          # writetimeout: 5000
 
  jackson:
    serialization:
      write-dates-as-timestamps: false






app:
  jwtSecret: itrZjz8EfvXL+w+dxxhKygic2jH8sZ6fdUAJrj/GJNmdl8XfRXY0ZWGPAj6Sg1MGDcGJMKsYw1Dabaw7hv5GHA==
  jwtExpirationInMs: 900000 # 15 minutes
  jwtRefreshExpirationInMs: 604800000 # 7 days

  frontend:
    url: http://localhost:8080/banking-api/api/auth
  mail:
    from: mgayeeeeee@gmail.com

    


geolocation:
  enabled: true  # Set to false in development
  api:
    key: ""  # Add your API key if using a paid service
        
  jackson:
    serialization:
      write-dates-as-timestamps: false
    default-property-inclusion: non_null

  security:
    user:
      name: admin
      password: admin123

logging:
  level:
    com.bank.application: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/banking-app.log

# JWT Configuration
jwt:
  secret: itrZjz8EfvXL+w+dxxhKygic2jH8sZ6fdUAJrj/GJNmdl8XfRXY0ZWGPAj6Sg1MGDcGJMKsYw1Dabaw7hv5GHA==
  expiration: 18000 # 5 hours in seconds

# Banking specific configurations
banking:
  account:
    default-daily-limit: 5000.00
    max-daily-limit: 50000.00
  transaction:
    max-amount: 1000000.00
    daily-transaction-limit: 100
  security:
    max-failed-attempts: 5
    account-lock-duration: 24 # hours















# # 
# # application.yml
# server:
#   port: 8080
#   ssl:
#     enabled: true
#     key-store: classpath:keystore.p12
#     key-store-password: ${SSL_KEYSTORE_PASSWORD}
#     key-store-type: PKCS12

# spring:
#   application:
#     name: banking-system
  
#   datasource:
#     url: jdbc:postgresql://localhost:5432/banking_db
#     username: ${DB_USERNAME}
#     password: ${DB_PASSWORD}
#     driver-class-name: org.postgresql.Driver
    
#   jpa:
#     hibernate:
#       ddl-auto: validate
#     properties:
#       hibernate:
#         dialect: org.hibernate.dialect.PostgreSQLDialect
#         format_sql: true
#         show_sql: false
#         jdbc:
#           batch_size: 20
#     show-sql: false
    
#   flyway:
#     enabled: true
#     locations: classpath:db/migration
#     baseline-on-migrate: true
    
#   redis:
#     host: ${REDIS_HOST:localhost}
#     port: ${REDIS_PORT:6379}
#     password: ${REDIS_PASSWORD}
#     timeout: 2000ms
#     lettuce:
#       pool:
#         max-active: 8
#         max-idle: 8
#         min-idle: 0
        
#   mail:
#     host: ${MAIL_HOST}
#     port: ${MAIL_PORT:587}
#     username: ${MAIL_USERNAME}
#     password: ${MAIL_PASSWORD}
#     properties:
#       mail:
#         smtp:
#           auth: true
#           starttls:
#             enable: true
            
# management:
#   endpoints:
#     web:
#       exposure:
#         include: health,info,metrics,prometheus
#   endpoint:
#     health:
#       show-details: when-authorized
      
# logging:
#   level:
#     com.bankingsystem: INFO
#     org.springframework.security: DEBUG
#   pattern:
#     console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    
# app:
#   jwtSecret: ${JWT_SECRET}
#   jwtExpirationInMs: 900000 # 15 minutes
#   jwtRefreshExpirationInMs: 604800000 # 7 days
  
#   security:
#     maxLoginAttempts: 5
#     lockoutDurationMinutes: 30
#     passwordExpiryDays: 90
#     sessionTimeoutMinutes: 30
    
#   features:
#     registration:
#       enabled: true
#       requireEmailVerification: true
#     mfa:
#       enabled: true
#       defaultMethod: TOTP
#     deviceTrust:
#       enabled: true
#       expiryDays: 90
# */



# port: 8080
#   ssl:
#     enabled: true
#     key-store: classpath:keystore.p12
#     key-store-password: ${SSL_KEYSTORE_PASSWORD}
#     key-store-type: PKCS12
#   servlet:
#     session:
#       timeout: 30m
#       cookie:
#         secure: true
#         http-only: true
#         same-site: strict

# spring:
#   application:
#     name: banking-system
  
#   profiles:
#     active: ${SPRING_PROFILES_ACTIVE:development}
  
#   datasource:
#     url: jdbc:postgresql://localhost:5432/banking_db
#     username: ${DB_USERNAME}
#     password: ${DB_PASSWORD}
#     driver-class-name: org.postgresql.Driver
#     hikari:
#       maximum-pool-size: 20
#       minimum-idle: 5
#       connection-timeout: 20000
#       idle-timeout: 300000
#       max-lifetime: 1200000
#       leak-detection-threshold: 60000
    
#   jpa:
#     hibernate:
#       ddl-auto: validate
#       naming:
#         physical-strategy: org.hibernate.boot.model.naming.SnakeCasePhysicalNamingStrategy
#     properties:
#       hibernate:
#         dialect: org.hibernate.dialect.PostgreSQLDialect
#         format_sql: true
#         show_sql: false
#         jdbc:
#           batch_size: 20
#         order_inserts: true
#         order_updates: true
#         cache:
#           use_second_level_cache: true
#           use_query_cache: true
#           region:
#             factory_class: org.hibernate.cache.jcache.JCacheRegionFactory
#     show-sql: false
    
#   flyway:
#     enabled: true
#     locations: classpath:db/migration
#     baseline-on-migrate: true
#     validate-on-migrate: true
    
#   redis:
#     host: ${REDIS_HOST:localhost}
#     port: ${REDIS_PORT:6379}
#     password: ${REDIS_PASSWORD}
#     database: 0
#     timeout: 2000ms
#     ssl: false
#     lettuce:
#       pool:
#         max-active: 8
#         max-idle: 8
#         min-idle: 2
#         max-wait: -1ms
#       shutdown-timeout: 100ms
        
#   mail:
#     host: ${MAIL_HOST}
#     port: ${MAIL_PORT:587}
#     username: ${MAIL_USERNAME}
#     password: ${MAIL_PASSWORD}
#     protocol: smtp
#     test-connection: false
#     default-encoding: UTF-8
#     properties:
#       mail:
#         smtp:
#           auth: true
#           starttls:
#             enable: true
#             required: true
#           ssl:
#             trust: ${MAIL_HOST}
#           connectiontimeout: 5000
#           timeout: 3000
#           writetimeout: 5000
          
#   thymeleaf:
#     cache: true
#     encoding: UTF-8
#     mode: HTML
#     prefix: classpath:/templates/
#     suffix: .html
    
#   jackson:
#     default-property-inclusion: NON_NULL
#     serialization:
#       write-dates-as-timestamps: false
#       write-date-timestamps-as-nanoseconds: false
#     deserialization:
#       read-date-timestamps-as-nanoseconds: false
#       fail-on-unknown-properties: false
      
#   security:
#     oauth2:
#       resourceserver:
#         jwt:
#           issuer-uri: ${JWT_ISSUER_URI:http://localhost:8080}
          
# management:
#   endpoints:
#     web:
#       exposure:
#         include: health,info,metrics,prometheus,auditevents
#       base-path: /actuator
#   endpoint:
#     health:
#       show-details: when-authorized
#       show-components: when-authorized
#     metrics:
#       enabled: true
#   metrics:
#     export:
#       prometheus:
#         enabled: true
#     distribution:
#       percentiles:
#         http.server.requests: 0.5, 0.95, 0.99
        
# logging:
#   level:
#     com.bankingsystem: INFO
#     org.springframework.security: INFO
#     org.springframework.web: INFO
#     org.hibernate.SQL: INFO
#     org.hibernate.type.descriptor.sql.BasicBinder: INFO
#   pattern:
#     console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{traceId},%X{spanId}] %logger{36} - %msg%n"
#     file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{traceId},%X{spanId}] %logger{36} - %msg%n"
#   file:
#     name: logs/banking-system.log
#     max-size: 10MB
#     max-history: 30
    
# app:
#   jwtSecret: ${JWT_SECRET}
#   jwtExpirationInMs: 900000 # 15 minutes
#   jwtRefreshExpirationInMs: 604800000 # 7 days
  
#   frontend:
#     url: ${FRONTEND_URL:https://banking.example.com}
    
#   mail:
#     from: ${MAIL_FROM:noreply@banking.example.com}
    
#   security:
#     maxLoginAttempts: 5
#     lockoutDurationMinutes: 30
#     passwordExpiryDays: 90
#     sessionTimeoutMinutes: 30
#     rateLimit:
#       maxAttempts: 10
#       windowMinutes: 60
#     cors:
#       allowedOrigins: ${CORS_ALLOWED_ORIGINS:https://banking.example.com}
#       allowedMethods: GET,POST,PUT,DELETE,OPTIONS
#       allowedHeaders: "*"
#       allowCredentials: true
#       maxAge: 3600
    
#   features:
#     registration:
#       enabled: true
#       requireEmailVerification: true
#       requirePhoneVerification: false
#     mfa:
#       enabled: true
#       defaultMethod: TOTP
#       backupCodesCount: 10
#     deviceTrust:
#       enabled: true
#       expiryDays: 90
#       maxDevicesPerUser: 5
#     geolocation:
#       enabled: true
#       unusualLocationThresholdKm: 100
#     compliance:
#       kycRequired: true
#       amlEnabled: true
#       sanctionsCheckEnabled: true
#       pepCheckEnabled: true
#     audit:
#       retentionDays: 2555 # 7 years
#       enableRealTimeAlerts: true